.animation {
  animation-duration: var(--transition-time);
  animation-timing-function: ease-in-out;
  animation-fill-mode: both;
}

.pulsation {
  animation-duration: var(--pulsation-time);
  animation-timing-function: ease-in-out;
}

/* Fades */

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.paused {
  opacity: 0;
}

.fadeIn {
  composes: animation;
  animation-name: fadeIn;
}

.fadeOut {
  composes: animation;
  animation-name: fadeOut;
}

/* Slides */

@keyframes slideInOpacity {
  from {
    opacity: 0;
    transform: translateX(-3rem);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideOutOpacity {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(3rem);
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-350px);
  }

  to {
    transform: translateX(0);
  }
}

@keyframes slideOutLeft {
  from {
    transform: translateX(0);
  }

  to {
    transform: translateX(-350px);
  }
}

.slideInOpacity {
  composes: animation;
  animation-name: slideInOpacity;
}

.slideOutOpacity {
  composes: animation;
  animation-name: slideOutOpacity;
}

.slideInLeft {
  composes: animation;
  animation-name: slideInLeft;
}

.slideOutLeft {
  composes: animation;
  animation-name: slideOutLeft;
}

@keyframes slideUpOpacity {
  0% {
    opacity: 0;
  }

  20% {
    opacity: 1;
    transform: translateY(-1em);
  }

  80% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateY(-2em);
  }
}

.difference {
  position: absolute;
  top: 0;
  opacity: 0;
  pointer-events: none;
}

.slideUpOpacity {
  composes: animation;
  animation-duration: 4s;
  animation-name: slideUpOpacity;
}

/* Card Animations */
@keyframes attackFromTopOutline {
  from {
    transform: translateY(0);
  }

  to {
    transform: translateY(25px);
  }
}

@keyframes attackFromBottomOutline {
  from {
    transform: translateY(0);
  }

  to {
    transform: translateY(-25px);
  }
}

.attackAnimation {
  composes: animation;
  animation-iteration-count: 2;
  animation-direction: alternate;
}

.attackFromTop {
  composes: attackAnimation;
  animation-name: attackFromTopOutline;
}

.attackFromBottom {
  composes: attackAnimation;
  animation-name: attackFromBottomOutline;
}

@keyframes attackFromTopFace {
  from {
    box-shadow: inherit;
  }

  to {
    box-shadow: 0 -5px 2px 2px var(--primary-color);
  }
}

@keyframes attackFromBottomFace {
  from {
    box-shadow: inherit;
  }

  to {
    box-shadow: 0 5px 2px 2px var(--primary-color);
  }
}

.attackFromTopFace {
  composes: attackAnimation;
  animation-name: attackFromTopFace;
}

.attackFromBottomFace {
  composes: attackAnimation;
  animation-name: attackFromBottomFace;
}

@keyframes boost {
  from {
    scale: 1;
    box-shadow: inherit;
  }

  to {
    scale: 1.1;
    box-shadow: 0 0 5px 5px var(--hilight-color);
  }
}

.boost {
  composes: animation;
  animation-name: boost;
  animation-iteration-count: 2;
  animation-direction: alternate;
}

@keyframes damage {
  0% {
    transform: translateX(0);
  }

  25% {
    transform: translateX(10px);
  }

  50% {
    transform: translateX(0);
  }

  75% {
    transform: translateX(-10px);
  }

  100% {
    transform: translateX(0);
  }
}

.damage {
  composes: animation;
  animation-name: damage;
  animation-iteration-count: 2;
  animation-direction: alternate;
}

/* Pops */
@keyframes pop {
  from {
    scale: 1;
    color: inherit;
  }

  to {
    scale: 1.5;
    color: var(----hilight-color);
  }
}

.pop {
  animation-name: pop;
  display: inline-block;
  animation-duration: var(--transition-time);
  animation-timing-function: ease-in-out;
  animation-iteration-count: 2;
  animation-direction: alternate;
}

/* Pulsates */
@keyframes activeGlow {
  from {
    box-shadow: 0 0 2px 2px var(--action-color);
  }
  to {
    box-shadow: 0 0 5px 5px var(--action-color);
  }
}

.activeCard {
  composes: pulsation;
  cursor: pointer;
  animation-name: activeGlow;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-fill-mode: both;
}

@keyframes wave {
  from {
    transform: translateY(0);
    color: inherit;
  }

  to {
    transform: translateY(-5px);
    color: var(--primary-color);
  }
}

.loadingDots {
  composes: pulsation;
  animation-name: wave;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  display: inline-block;
  margin-left: 3px;

  &:nth-child(2) {
    animation-delay: calc(var(--transition-time) * 1);
  }

  &:nth-child(3) {
    animation-delay: calc(var(--transition-time) * 2);
  }

  &:nth-child(4) {
    animation-delay: calc(var(--transition-time) * 3);
  }
}
