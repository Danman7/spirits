.cursor {
  cursor: pointer;
}

.shadowedText {
  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);
}

.positiveText {
  composes: shadowedText;
  color: var(--action-color);
}

.negativeText {
  composes: shadowedText;
  color: var(--primary-color);
}

/* Card size, shape and shadow */
.cardOutline {
  width: 250px;
  height: 350px;
  border-radius: var(--border-radius);
  perspective: 1000px;
}

.smallOutline {
  width: 150px;
  height: 210px;
}

.smallCard {
  composes: smallOutline;
  font-size: 0.594rem;
  border-radius: 3px;

  .cardPaper {
    box-shadow: var(--box-shadow-1);
  }

  .cardFront,
  .cardBack {
    border-width: 1px;
  }
}

/* Card border, contents and internal animation-only shadow */
.cardPaper {
  height: 100%;
  transition: transform var(--pulsation-time);
  transform-style: preserve-3d;
  box-shadow: var(--box-shadow-2);
  border-radius: var(--border-radius);
}

.cardFlipped .cardPaper {
  transform: rotateY(180deg);
}

.cardFace {
  backface-visibility: hidden;
  width: 100%;
  height: 100%;
  border-width: 3px;
  border-style: solid;
  border-color: var(--accent-color);
  border-radius: var(--border-radius);
}

.cardFront {
  composes: cardFace;
  display: flex;
  flex-direction: column;
  background: var(--background-color);
}

.cardHeader {
  padding: var(--padding);
  border-bottom: 1px solid var(--accent-color);
  color: var(--background-color);
  border-radius: 3px 3px 0 0;
}

.uniqueCard {
  border-color: var(--hilight-color);
}

.cardBack {
  composes: cardFace;
  position: absolute;
  top: 0;
  transform: rotateY(180deg);
  background: repeating-linear-gradient(
    45deg,
    var(--background-color),
    var(--background-color) 10px,
    var(--accent-color) 10px,
    var(--accent-color) 20px
  );
}

.smallCard .cardBack {
  background: repeating-linear-gradient(
    45deg,
    var(--background-color),
    var(--background-color) 5px,
    var(--accent-color) 5px,
    var(--accent-color) 10px
  );
}

.cardTitle {
  top: 0;
  display: flex;
  justify-content: space-between;
}

.cardContent {
  text-align: left;
  color: var(--text-color);
  overflow: auto;
  padding: var(--padding);
  flex-grow: 2;

  p {
    margin-bottom: 0.5em;
  }
}

.cardFooter {
  text-align: left;
  color: var(--text-color);
  bottom: 0;
  padding: var(--padding);
  border-top: 1px solid var(--accent-color);
}

.cardFlavor {
  font-style: italic;
  color: var(--accent-color);
}

/* Board */
.board {
  height: 100vh;
  overflow: hidden;
}

.playerField {
  height: 50vh;
  display: grid;
  grid-template-columns: 1fr 5fr 1fr;
  grid-template-rows: auto;
  gap: var(--padding);
  justify-items: center;
}

.topPlayerField {
  composes: playerField;
  grid-template-areas:
    'discard hand deck'
    'board board board';
}

.bottomPlayerField {
  composes: playerField;
  grid-template-areas:
    'board board board'
    'discard hand deck';
}

.playerBoard {
  grid-area: board;
  display: flex;
  flex-direction: row;
  justify-content: center;
  padding: var(--padding);
  gap: 0.5rem;
}

.topPlayerBoard {
  composes: playerBoard;
  align-items: flex-end;
}

.bottomPlayerBoard {
  composes: playerBoard;
  align-items: flex-start;
}

.playerHand {
  grid-area: hand;
  display: flex;
  flex-direction: row;
  justify-content: center;
  flex-grow: 2;
  z-index: 2;
  height: 64px;

  .cardOutline {
    position: relative;
    margin: 0 -80px;
  }
}

.topPlayerHand {
  composes: playerHand;
  align-items: flex-end;
}

.bottomPlayerHand {
  composes: playerHand;
  align-self: end;

  .cardOutline {
    transition: bottom 0.2s;

    &:hover {
      bottom: calc(350px - 64px);
      z-index: 2;
      box-shadow: var(--box-shadow-3);
    }
  }
}

.faceDownStack {
  composes: smallOutline;
  height: 25px;
  display: flex;

  .cardOutline {
    position: absolute;
  }
}

.deck {
  composes: faceDownStack;
  grid-area: deck;
}

.discard {
  composes: faceDownStack;
  grid-area: discard;
}

.topPlayerDeck {
  composes: deck;
  align-items: flex-end;
}

.topPlayerDiscard {
  composes: discard;
  align-items: flex-end;
}

.bottomPlayerDeck {
  composes: deck;
  align-self: end;
  cursor: pointer;
  position: relative;
}

.bottomPlayerDiscard {
  composes: discard;
  align-self: end;
  cursor: pointer;
  position: relative;
}

.box {
  text-align: center;
  overflow: hidden;
  box-shadow: var(--box-shadow-3);
  padding: calc(2 * var(--padding));
  border-radius: var(--border-radius);
  color: var(--text-color);
  background: var(--background-color);
}

.modal {
  composes: box;
  z-index: 5;
}

.modalWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.overlay {
  background: rgba(0, 0, 0, 0.5);
  position: absolute;
  width: 100%;
  height: 100%;
  z-index: 5;
}

.sidePanel {
  composes: box;
  max-width: 280px;
  position: absolute;
  text-align: left;
  left: 1em;
  bottom: 3em;
  border-left: 3px solid var(--primary-color);
  z-index: 3;
}

.playerInfo {
  position: fixed;
  right: 1rem;
  font-weight: 400;
  z-index: 4;
}

.activePlayerInfo {
  font-weight: 800;
}

.topPlayerInfo {
  composes: playerInfo;
  top: 2em;
}

.bottomPlayerInfo {
  composes: playerInfo;
  bottom: 2em;
}

.inlineBlock {
  display: inline-block;
  position: relative;
}

.link {
  border: none;
  background: none;
  display: inline-block;
  cursor: pointer;
  color: var(--primary-color);
  font-weight: 700;
  transition: all var(--transition-time);

  &:hover {
    scale: 1.1;
    text-decoration: underline;
  }

  &:active {
    scale: 0.9;
  }
}

.cardBrowserModal {
  position: relative;
  overflow: auto;
  height: 100%;
  display: flex;
  flex-direction: column;
  width: 820px;
  padding-bottom: 2em;

  h1 {
    padding-bottom: 1em;
  }
}

.cardBrowseModalFooter {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  padding: var(--padding);
  backdrop-filter: blur(10px);
}

.cardList {
  display: flex;
  margin-bottom: 1rem;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  flex-grow: 2;
  align-content: center;
}
